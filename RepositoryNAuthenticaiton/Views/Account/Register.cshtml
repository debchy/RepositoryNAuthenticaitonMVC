@using CMS.Helpers;
@using CMS.ViewModels

@model RepositoryNAuthenticaiton.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Gender, EnumHelper.GetSelectList(typeof(RepositoryNAuthenticaiton.Models.Gender)), new { @class = "selectpicker" })
                                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*<div class="form-group">
                                    @Html.TextBoxFor(m => m.Interest, new { @class = "form-control", placeholder = "Interest" })
                                    @Html.ValidationMessageFor(m => m.Interest, "", new { @class = "text-danger" })
                                </div>*@
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", placeholder = "Mobile" })
                                @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.City, new { @class = "form-control", placeholder = "City" })
                                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.DropDownListFor(m => m.Country, HelperViewModels.CountryList(), "-- Select Country --", new { @class = "selectpicker", placeholder = "country" })
                                @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*<div class="form-group">
                                    @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", placeholder = "Mobile" })
                                    @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })
                                </div>*@
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">

                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Retype Password" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="checkbox">
                        <label>
                            @Html.CheckBoxFor(m => m.agreeTnC)
                            Please accept <a href="/terms-condition" target="_blank">terms and conditions</a>
                            @Html.ValidationMessageFor(m => m.agreeTnC, "", new { @class = "text-danger" })
                        </label>
                    </div>

                    <div class="recaptcha">
                        @Html.reCaptcha()
                    </div>

                    <div class="btn">
                        <input type="submit" class="btn orange" value="Register" />
                    </div>

}



@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    // extend range validator method to treat checkboxes differently
    var defaultRangeValidator = $.validator.methods.range;
    $.validator.methods.range = function(value, element, param) {
        if(element.type === 'checkbox') {
            // if it's a checkbox return true if it is checked
            return element.checked;
        } else {
            // otherwise run the default validation function
            return defaultRangeValidator.call(this, value, element, param);
        }
    }
</script>
}
